# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Application Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  LambdaRDSTest:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: Application Lambda function to access a RDS Database and read data
      MemorySize: 128
      Timeout: 60
      Handler: LambdaRDSTest.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - arn:aws:lambda:us-east-1:288368867782:layer:asmworkshoplayer:1
      PackageType: Zip
      Policies:
        - Statement:
            - Action:
                - lambda:InvokeFunction
              Resource: '*'
              Effect: Allow
            - Condition:
                StringEquals:
                  aws:ResourceTag/Event: ${aws:PrincipalTag/Event}
                  aws:ResourceTag/Workshop: ${aws:PrincipalTag/Workshop}
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:DescribeSecret
              Resource: '*'
              Effect: Allow
            - Sid: AWSLambdaVPCAccessExecutionPermissions
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribeSubnets
                - ec2:DeleteNetworkInterface
                - ec2:AssignPrivateIpAddresses
                - ec2:UnassignPrivateIpAddresses
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
      SnapStart:
        ApplyOn: None
      Tags:
        Workshop: AWSSecretsManagerWorkshop
        lambda:createdBy: SAM
      VpcConfig:
        SecurityGroupIds:
          - sg-09a9c755f03c81dc6
        SubnetIds:
          - subnet-0f3530d23426e9e0a
          - subnet-04363b6621e2a86cd
        Ipv6AllowedForDualStack: false
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /
            Method: GET
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
